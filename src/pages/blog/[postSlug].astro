---
import { getCollection } from 'astro:content'
import Layout from '../../layouts/Layout.astro'

export async function getStaticPaths() {
  const posts = await getCollection('blog')
  return posts
    .filter((post) => import.meta.env.DEV || post.data.published)
    .map((post) => ({
      params: { postSlug: post.slug },
    }))
}

const { postSlug } = Astro.params
const post = (await getCollection('blog')).find(
  (p) => p.slug === postSlug && (import.meta.env.DEV || p.data.published),
)
const authorData = (await getCollection('authors'))[0].data

if (!post) {
  return Astro.redirect('/404')
}

const author = authorData.find((a) => a.slug === post.data.author)
const authorRole = post.data.authorRole || author?.role

if (!author) {
  throw new Error(`Author not found for slug: ${post.data.author}`)
}

const { Content } = await post.render()
---

<Layout title={post.data.title}>
  <section class="section-full">
    <div class="container-padded">
      <div class="pb-16 pt-8">
        <div class="mb-8 flex items-center gap-x-4 pt-8 text-lg">
          <img
            class="h-10 w-10 rounded-full"
            src={author.avatar}
            alt={`Avatar of ${author.name}`}
          />
          <span class="text-white">
            <span class="font-semibold">{author.name}</span>
            <span class="ml-2 text-gray-400">{authorRole}</span>
          </span>
          <span class="text-gray-600">·</span>
          {
            post.data.category && (
              <>
                <a
                  href={`/category/${post.data.category}`}
                  class="text-gray-500 hover:text-gray-300"
                >
                  {post.data.category}
                </a>
                <span class="text-gray-600">·</span>
              </>
            )
          }
          <time datetime={post.data.date} class="text-gray-500">
            {
              new Date(post.data.date).toLocaleDateString('pl-PL', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
              })
            }
          </time>
        </div>

        <h1 class="mb-8 text-6xl font-light text-white">{post.data.title}</h1>

        {
          post.data.excerpt && (
            <p class="mb-12 text-3xl font-light leading-relaxed text-gray-300">
              {post.data.excerpt}
            </p>
          )
        }

        <article
          class="prose custom-markdown text-white [&>blockquote]:text-2xl [&>h2]:text-4xl [&>h3]:text-3xl [&>ol]:text-2xl [&>p]:text-2xl [&>ul]:text-2xl"
        >
          <Content />
        </article>

        {
          post.data.bannerEnd &&
            (async () => {
              try {
                const Banner = await import(
                  `../../banners/${post.data.bannerEnd}.astro`
                )
                return <Banner.default />
              } catch (error) {
                console.error('Błąd ładowania bannera:', error)
                return null
              }
            })()
        }
      </div>
    </div>
  </section>
</Layout>
